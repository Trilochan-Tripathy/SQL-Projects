- Given the CITY and COUNTRY tables, query the sum of the populations of all cities where the CONTINENT is 'Asia'.
Select 
SUM(C1.POPULATION)
From City as  C1 
Inner Join Country as C2
on C1.CountryCode = C2.Code 
Where CONTINENT = "Asia"

- Given the CITY and COUNTRY tables, query the names of all cities where the CONTINENT is 'Africa'.
Select C1.Name
From City C1 Inner Join Country C2
On C1.CountryCode  = C2.Code
Where CONTINENT = "Africa"

- Query the names of all the continents (COUNTRY.Continent) and their respective average city populations (CITY.Population) rounded down to the nearest integer.
Select C1.Continent , FLOOR(AVG(C2.Population))
From Country C1 Inner Join City C2
ON C1.Code = C2.CountryCode 
Group By C1.Continent

- Write a query to print the respective hacker_id and name of hackers who achieved full scores for more than one challenge. Order your output in descending order by the total number of challenges in which the hacker earned a full score. If more than one hacker received full scores in same number of challenges, then sort them by ascending hacker_id.
select h.hacker_id, h.name from Submissions as s join Hackers as h 
on s.hacker_id = h.hacker_id 
join Challenges as c on s.challenge_id = c.challenge_id
join Difficulty as d on c.Difficulty_level = d.Difficulty_level
where s.score = d.score 
group by h.hacker_id, h.name 
having count(*) > 1
order by count(*) desc, h.hacker_id;

- Write a query to print the id, age, coins_needed, and power of the wands that Ron's interested in, sorted in order of descending power. If more than one wand has same power, sort the result in order of descending age.
Select W.ID , P.age , W.coins_needed , W.power 
From Wands W Inner Join Wands_Property P
ON W.code = P.code
where w.coins_needed = (select min(coins_needed)
                       from Wands w2 inner join Wands_Property p2 
                       on w2.code = p2.code 
                       where p2.is_evil = 0 and P.age = p2.age and W.power = w2.power)
Order By W.power DESC , P.age DESC 

- The total score of a hacker is the sum of their maximum scores for all of the challenges. Write a query to print the hacker_id, name, and total score of the hackers ordered by the descending score. If more than one hacker achieved the same total score, then sort the result by ascending hacker_id. Exclude all hackers with a total score of  from your result.
SELECT 
res.hacker_id as id, 
res.name as name,
SUM(res.max_score) as score
from (
  SELECT s.challenge_id as challenge_id, h.hacker_id as hacker_id ,h.name as name,Max(score) as max_score
    FROM Hackers as h JOIN Submissions as s
    ON h.hacker_id = s.hacker_id
    GROUP BY challenge_id ,hacker_id,name 
    having max_score <> 0
) as res
GROUP BY hacker_id,name order by score desc,id asc;
