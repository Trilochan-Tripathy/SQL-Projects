- Assume you are given the table below on Uber transactions made by users. Write a query to obtain the third transaction of every user. Output the user id, spend and transaction date.
WITH trans_num AS (
SELECT user_id,spend, transaction_date, 
ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY transaction_date) AS row_num 
FROM transactions)
 
SELECT user_id, spend, transaction_date 
FROM trans_num 
WHERE row_num = 3 

- Write a query to obtain a breakdown of the time spent sending vs. opening snaps as a percentage of total time spent on these activities grouped by age group. Round the percentage to 2 decimal places in the output.
WITH snaps_statistics AS (
  SELECT b.age_bucket, 
    SUM(CASE WHEN a.activity_type = 'send' 
      THEN a.time_spent ELSE 0 END) AS send_timespent, 
    SUM(CASE WHEN a.activity_type = 'open' 
      THEN a.time_spent ELSE 0 END) AS open_timespent, 
    SUM(a.time_spent) AS total_timespent 
  FROM activities a 
 INNER JOIN age_breakdown AS b 
    ON a.user_id = b.user_id 
  WHERE a.activity_type IN ('send', 'open') 
  GROUP BY b.age_bucket) 

SELECT 
  age_bucket, 
  ROUND(100.0 * send_timespent / total_timespent, 2) AS send_perc, 
  ROUND(100.0 * open_timespent / total_timespent, 2) AS open_perc 
FROM snaps_statistics

- Given a table of tweet data over a specified time period, calculate the 3-day rolling average of tweets for each user. Output the user ID, tweet date, and rolling averages rounded to 2 decimal places.
SELECT user_id, tweet_date,   
ROUND(AVG(tweet_count) OVER (PARTITION BY user_id ORDER BY tweet_date ROWS BETWEEN 2 PRECEDING AND CURRENT ROW),2) AS rolling_avg_3d
FROM tweets;
